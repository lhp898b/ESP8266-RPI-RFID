<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABoAAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAaAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAyAAAAOQAAADjAAAA4wAA
        AOMAAADjAAAA4wAAAOMAAADjAAAA4wAAAOMAAADjAAAA4wAAAOMAAADjAAAA4wAAAOMAAADjAAAA5AAA
        AMgAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADGAAAA4gAA
        AOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADiAAAAxgAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        ADUAAAA9AAAAPQAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPQAAAD0AAAA9AAAAPQAA
        AD0AAAA9AAAAPQAAAD0AAAA1AAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAlAAAAywAAAOAAAADfAAAA4AAAAN8AAADfAAAA3wAAAN8AAADfAAAA3wAAAN8AAADfAAAA3wAA
        AN8AAADfAAAA3wAAAOAAAADfAAAA4AAAAMoAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAkAAAC3AAAAvgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAXQAAAFEAAAAAAAAAAAAAAAAAAAAAAAAAEwAA
        AMsAAACuAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACkAAAArAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAA0AAAALgAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAALQAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAIIAAAB3AAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAtgAA
        AKYAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAASAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf8AAAD/AA
        AA/wgAEP8IABD/AAAQ/xAACP4Qwgh+MMMMfjDDDH4wwwx+cMMOfHHDjjxxw444ccOOGHHHjhjz588f4e
        eH/+Hnh//h54///8P////D////x///////8=
</value>
  </data>
</root>